//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace FitnessCenter.BO
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Membership))]
    [KnownType(typeof(TowelTransaction))]
    [KnownType(typeof(TowelHiringPackage))]
    public partial class TowelHiringMaster
    {
        #region Primitive Properties
        [DataMember]
        public virtual long ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual long memberId
        {
            get { return _memberId; }
            set
            {
                if (_memberId != value)
                {
                    if (Membership != null && Membership.ID != value)
                    {
                        Membership = null;
                    }
                    _memberId = value;
                }
            }
        }
        private long _memberId;
        [DataMember]
        public virtual long towelPackageId
        {
            get { return _towelPackageId; }
            set
            {
                if (_towelPackageId != value)
                {
                    if (TowelHiringPackage != null && TowelHiringPackage.ID != value)
                    {
                        TowelHiringPackage = null;
                    }
                    _towelPackageId = value;
                }
            }
        }
        private long _towelPackageId;
        [DataMember]
        public virtual System.DateTime startDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime endDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isPaid
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<long> paymentMode
        {
            get;
            set;
        }
        [DataMember]
        public virtual decimal amount
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> chequeDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual string chequeNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual string bankName
        {
            get;
            set;
        }
        [DataMember]
        public virtual string branchDetails
        {
            get;
            set;
        }
        [DataMember]
        public virtual int hiringTimeUpdate
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime insertDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> updateDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> deleteDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isDeleted
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual Membership Membership
        {
            get { return _membership; }
            set
            {
                if (!ReferenceEquals(_membership, value))
                {
                    var previousValue = _membership;
                    _membership = value;
                    FixupMembership(previousValue);
                }
            }
        }
        private Membership _membership;
        
    
        [DataMember]
        public virtual ICollection<TowelTransaction> TowelTransactions
        {
            get
            {
                if (_towelTransactions == null)
                {
                    var newCollection = new FixupCollection<TowelTransaction>();
                    newCollection.CollectionChanged += FixupTowelTransactions;
                    _towelTransactions = newCollection;
                }
                return _towelTransactions;
            }
            set
            {
                if (!ReferenceEquals(_towelTransactions, value))
                {
                    var previousValue = _towelTransactions as FixupCollection<TowelTransaction>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTowelTransactions;
                    }
                    _towelTransactions = value;
                    var newValue = value as FixupCollection<TowelTransaction>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTowelTransactions;
                    }
                }
            }
        }
        private ICollection<TowelTransaction> _towelTransactions;
        
    
        [DataMember]
        public virtual TowelHiringPackage TowelHiringPackage
        {
            get { return _towelHiringPackage; }
            set
            {
                if (!ReferenceEquals(_towelHiringPackage, value))
                {
                    var previousValue = _towelHiringPackage;
                    _towelHiringPackage = value;
                    FixupTowelHiringPackage(previousValue);
                }
            }
        }
        private TowelHiringPackage _towelHiringPackage;

        #endregion

        #region Association Fixup
    
        private void FixupMembership(Membership previousValue)
        {
            if (previousValue != null && previousValue.TowelHiringMasters.Contains(this))
            {
                previousValue.TowelHiringMasters.Remove(this);
            }
    
            if (Membership != null)
            {
                if (!Membership.TowelHiringMasters.Contains(this))
                {
                    Membership.TowelHiringMasters.Add(this);
                }
                if (memberId != Membership.ID)
                {
                    memberId = Membership.ID;
                }
            }
        }
    
        private void FixupTowelHiringPackage(TowelHiringPackage previousValue)
        {
            if (previousValue != null && previousValue.TowelHiringMasters.Contains(this))
            {
                previousValue.TowelHiringMasters.Remove(this);
            }
    
            if (TowelHiringPackage != null)
            {
                if (!TowelHiringPackage.TowelHiringMasters.Contains(this))
                {
                    TowelHiringPackage.TowelHiringMasters.Add(this);
                }
                if (towelPackageId != TowelHiringPackage.ID)
                {
                    towelPackageId = TowelHiringPackage.ID;
                }
            }
        }
    
        private void FixupTowelTransactions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TowelTransaction item in e.NewItems)
                {
                    item.TowelHiringMaster = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TowelTransaction item in e.OldItems)
                {
                    if (ReferenceEquals(item.TowelHiringMaster, this))
                    {
                        item.TowelHiringMaster = null;
                    }
                }
            }
        }

        #endregion

    }
}
