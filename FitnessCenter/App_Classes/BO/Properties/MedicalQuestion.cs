//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace FitnessCenter.BO
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(MedicalQuestion))]
    public partial class MedicalQuestion
    {
        #region Primitive Properties
        [DataMember]
        public virtual long ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual string questions
        {
            get;
            set;
        }
        [DataMember]
        public virtual int questionTypeId
        {
            get;
            set;
        }
        [DataMember]
        public virtual string Comment
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<long> QuestionId
        {
            get { return _questionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_questionId != value)
                    {
                        if (MedicalQuestion1 != null && MedicalQuestion1.ID != value)
                        {
                            MedicalQuestion1 = null;
                        }
                        _questionId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _questionId;
        [DataMember]
        public virtual Nullable<long> OptionId
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime insertDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> updateDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> deleteDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isActive
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isDeleted
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual ICollection<MedicalQuestion> MedicalQuestions1
        {
            get
            {
                if (_medicalQuestions1 == null)
                {
                    var newCollection = new FixupCollection<MedicalQuestion>();
                    newCollection.CollectionChanged += FixupMedicalQuestions1;
                    _medicalQuestions1 = newCollection;
                }
                return _medicalQuestions1;
            }
            set
            {
                if (!ReferenceEquals(_medicalQuestions1, value))
                {
                    var previousValue = _medicalQuestions1 as FixupCollection<MedicalQuestion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMedicalQuestions1;
                    }
                    _medicalQuestions1 = value;
                    var newValue = value as FixupCollection<MedicalQuestion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMedicalQuestions1;
                    }
                }
            }
        }
        private ICollection<MedicalQuestion> _medicalQuestions1;
        
    
        [DataMember]
        public virtual MedicalQuestion MedicalQuestion1
        {
            get { return _medicalQuestion1; }
            set
            {
                if (!ReferenceEquals(_medicalQuestion1, value))
                {
                    var previousValue = _medicalQuestion1;
                    _medicalQuestion1 = value;
                    FixupMedicalQuestion1(previousValue);
                }
            }
        }
        private MedicalQuestion _medicalQuestion1;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupMedicalQuestion1(MedicalQuestion previousValue)
        {
            if (previousValue != null && previousValue.MedicalQuestions1.Contains(this))
            {
                previousValue.MedicalQuestions1.Remove(this);
            }
    
            if (MedicalQuestion1 != null)
            {
                if (!MedicalQuestion1.MedicalQuestions1.Contains(this))
                {
                    MedicalQuestion1.MedicalQuestions1.Add(this);
                }
                if (QuestionId != MedicalQuestion1.ID)
                {
                    QuestionId = MedicalQuestion1.ID;
                }
            }
            else if (!_settingFK)
            {
                QuestionId = null;
            }
        }
    
        private void FixupMedicalQuestions1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (MedicalQuestion item in e.NewItems)
                {
                    item.MedicalQuestion1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MedicalQuestion item in e.OldItems)
                {
                    if (ReferenceEquals(item.MedicalQuestion1, this))
                    {
                        item.MedicalQuestion1 = null;
                    }
                }
            }
        }

        #endregion

    }
}
