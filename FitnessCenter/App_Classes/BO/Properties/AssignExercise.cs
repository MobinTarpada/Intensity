//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace FitnessCenter.BO
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ExerciseCardMaster))]
    [KnownType(typeof(Membership))]
    public partial class AssignExercise
    {
        #region Primitive Properties
        [DataMember]
        public virtual long ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual long memberId
        {
            get { return _memberId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_memberId != value)
                    {
                        if (Membership != null && Membership.ID != value)
                        {
                            Membership = null;
                        }
                        _memberId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _memberId;
        [DataMember]
        public virtual Nullable<int> bodyTypeId
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> levelId
        {
            get;
            set;
        }
        [DataMember]
        public virtual string set1
        {
            get;
            set;
        }
        [DataMember]
        public virtual string set2
        {
            get;
            set;
        }
        [DataMember]
        public virtual string set3
        {
            get;
            set;
        }
        [DataMember]
        public virtual string set4
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<long> exerciseCardMasterId
        {
            get { return _exerciseCardMasterId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_exerciseCardMasterId != value)
                    {
                        if (ExerciseCardMaster != null && ExerciseCardMaster.ID != value)
                        {
                            ExerciseCardMaster = null;
                        }
                        _exerciseCardMasterId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _exerciseCardMasterId;
        [DataMember]
        public virtual string duration
        {
            get;
            set;
        }
        [DataMember]
        public virtual string RPM
        {
            get;
            set;
        }
        [DataMember]
        public virtual string Resistence
        {
            get;
            set;
        }
        [DataMember]
        public virtual string Calories
        {
            get;
            set;
        }
        [DataMember]
        public virtual string Distance
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime insertDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> updateDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> deleteDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<bool> isActive
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isDelete
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual ExerciseCardMaster ExerciseCardMaster
        {
            get { return _exerciseCardMaster; }
            set
            {
                if (!ReferenceEquals(_exerciseCardMaster, value))
                {
                    var previousValue = _exerciseCardMaster;
                    _exerciseCardMaster = value;
                    FixupExerciseCardMaster(previousValue);
                }
            }
        }
        private ExerciseCardMaster _exerciseCardMaster;
        
    
        [DataMember]
        public virtual Membership Membership
        {
            get { return _membership; }
            set
            {
                if (!ReferenceEquals(_membership, value))
                {
                    var previousValue = _membership;
                    _membership = value;
                    FixupMembership(previousValue);
                }
            }
        }
        private Membership _membership;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupExerciseCardMaster(ExerciseCardMaster previousValue)
        {
            if (previousValue != null && previousValue.AssignExercises.Contains(this))
            {
                previousValue.AssignExercises.Remove(this);
            }
    
            if (ExerciseCardMaster != null)
            {
                if (!ExerciseCardMaster.AssignExercises.Contains(this))
                {
                    ExerciseCardMaster.AssignExercises.Add(this);
                }
                if (exerciseCardMasterId != ExerciseCardMaster.ID)
                {
                    exerciseCardMasterId = ExerciseCardMaster.ID;
                }
            }
            else if (!_settingFK)
            {
                exerciseCardMasterId = null;
            }
        }
    
        private void FixupMembership(Membership previousValue)
        {
            if (previousValue != null && previousValue.AssignExercises.Contains(this))
            {
                previousValue.AssignExercises.Remove(this);
            }
    
            if (Membership != null)
            {
                if (!Membership.AssignExercises.Contains(this))
                {
                    Membership.AssignExercises.Add(this);
                }
                if (memberId != Membership.ID)
                {
                    memberId = Membership.ID;
                }
            }
        }

        #endregion

    }
}
