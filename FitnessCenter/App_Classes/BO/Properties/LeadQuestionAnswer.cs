//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace FitnessCenter.BO
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(LeadQuestionOption))]
    [KnownType(typeof(LeadQuestionsMaster))]
    [KnownType(typeof(Lead))]
    public partial class LeadQuestionAnswer
    {
        #region Primitive Properties
        [DataMember]
        public virtual long ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual long leadId
        {
            get { return _leadId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_leadId != value)
                    {
                        if (Lead != null && Lead.ID != value)
                        {
                            Lead = null;
                        }
                        _leadId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _leadId;
        [DataMember]
        public virtual long questionId
        {
            get { return _questionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_questionId != value)
                    {
                        if (LeadQuestionsMaster != null && LeadQuestionsMaster.ID != value)
                        {
                            LeadQuestionsMaster = null;
                        }
                        _questionId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _questionId;
        [DataMember]
        public virtual Nullable<long> optionId
        {
            get { return _optionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_optionId != value)
                    {
                        if (LeadQuestionOption != null && LeadQuestionOption.ID != value)
                        {
                            LeadQuestionOption = null;
                        }
                        _optionId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _optionId;
        [DataMember]
        public virtual string answerText
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime insertDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> updateDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> deleteDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isActive
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isDeleted
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual LeadQuestionOption LeadQuestionOption
        {
            get { return _leadQuestionOption; }
            set
            {
                if (!ReferenceEquals(_leadQuestionOption, value))
                {
                    var previousValue = _leadQuestionOption;
                    _leadQuestionOption = value;
                    FixupLeadQuestionOption(previousValue);
                }
            }
        }
        private LeadQuestionOption _leadQuestionOption;
        
    
        [DataMember]
        public virtual LeadQuestionsMaster LeadQuestionsMaster
        {
            get { return _leadQuestionsMaster; }
            set
            {
                if (!ReferenceEquals(_leadQuestionsMaster, value))
                {
                    var previousValue = _leadQuestionsMaster;
                    _leadQuestionsMaster = value;
                    FixupLeadQuestionsMaster(previousValue);
                }
            }
        }
        private LeadQuestionsMaster _leadQuestionsMaster;
        
    
        [DataMember]
        public virtual Lead Lead
        {
            get { return _lead; }
            set
            {
                if (!ReferenceEquals(_lead, value))
                {
                    var previousValue = _lead;
                    _lead = value;
                    FixupLead(previousValue);
                }
            }
        }
        private Lead _lead;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupLeadQuestionOption(LeadQuestionOption previousValue)
        {
            if (previousValue != null && previousValue.LeadQuestionAnswers.Contains(this))
            {
                previousValue.LeadQuestionAnswers.Remove(this);
            }
    
            if (LeadQuestionOption != null)
            {
                if (!LeadQuestionOption.LeadQuestionAnswers.Contains(this))
                {
                    LeadQuestionOption.LeadQuestionAnswers.Add(this);
                }
                if (optionId != LeadQuestionOption.ID)
                {
                    optionId = LeadQuestionOption.ID;
                }
            }
            else if (!_settingFK)
            {
                optionId = null;
            }
        }
    
        private void FixupLeadQuestionsMaster(LeadQuestionsMaster previousValue)
        {
            if (previousValue != null && previousValue.LeadQuestionAnswers.Contains(this))
            {
                previousValue.LeadQuestionAnswers.Remove(this);
            }
    
            if (LeadQuestionsMaster != null)
            {
                if (!LeadQuestionsMaster.LeadQuestionAnswers.Contains(this))
                {
                    LeadQuestionsMaster.LeadQuestionAnswers.Add(this);
                }
                if (questionId != LeadQuestionsMaster.ID)
                {
                    questionId = LeadQuestionsMaster.ID;
                }
            }
        }
    
        private void FixupLead(Lead previousValue)
        {
            if (previousValue != null && previousValue.LeadQuestionAnswers.Contains(this))
            {
                previousValue.LeadQuestionAnswers.Remove(this);
            }
    
            if (Lead != null)
            {
                if (!Lead.LeadQuestionAnswers.Contains(this))
                {
                    Lead.LeadQuestionAnswers.Add(this);
                }
                if (leadId != Lead.ID)
                {
                    leadId = Lead.ID;
                }
            }
        }

        #endregion

    }
}
