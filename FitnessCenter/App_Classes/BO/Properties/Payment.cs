//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace FitnessCenter.BO
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CardTypeMaster))]
    [KnownType(typeof(Club))]
    [KnownType(typeof(Lead))]
    [KnownType(typeof(Membership))]
    [KnownType(typeof(PayMode))]
    public partial class Payment
    {
        #region Primitive Properties
        [DataMember]
        public virtual long ID
        {
            get;
            set;
        }
        [DataMember]
        public virtual string PayNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> PayDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual long LeadId
        {
            get { return _leadId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_leadId != value)
                    {
                        if (Lead != null && Lead.ID != value)
                        {
                            Lead = null;
                        }
                        _leadId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _leadId;
        [DataMember]
        public virtual long ClubId
        {
            get { return _clubId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_clubId != value)
                    {
                        if (Club != null && Club.ID != value)
                        {
                            Club = null;
                        }
                        _clubId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _clubId;
        [DataMember]
        public virtual long MembershipId
        {
            get { return _membershipId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_membershipId != value)
                    {
                        if (Membership != null && Membership.ID != value)
                        {
                            Membership = null;
                        }
                        _membershipId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _membershipId;
        [DataMember]
        public virtual decimal TotalAmount
        {
            get;
            set;
        }
        [DataMember]
        public virtual decimal PayAmount
        {
            get;
            set;
        }
        [DataMember]
        public virtual long PaymentModeId
        {
            get { return _paymentModeId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_paymentModeId != value)
                    {
                        if (PayMode != null && PayMode.Id != value)
                        {
                            PayMode = null;
                        }
                        _paymentModeId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private long _paymentModeId;
        [DataMember]
        public virtual string ChequeBank
        {
            get;
            set;
        }
        [DataMember]
        public virtual string ChequeBranch
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> ChequeDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual string ChequeNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual string CardBank
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<long> CardTypeId
        {
            get { return _cardTypeId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cardTypeId != value)
                    {
                        if (CardTypeMaster != null && CardTypeMaster.Id != value)
                        {
                            CardTypeMaster = null;
                        }
                        _cardTypeId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _cardTypeId;
        [DataMember]
        public virtual string CardNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual string CardName
        {
            get;
            set;
        }
        [DataMember]
        public virtual string CardExpDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual string ETransactionId
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> PayDueDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime insertDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> updateDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> deleteDate
        {
            get;
            set;
        }
        [DataMember]
        public virtual bool isDeleted
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual CardTypeMaster CardTypeMaster
        {
            get { return _cardTypeMaster; }
            set
            {
                if (!ReferenceEquals(_cardTypeMaster, value))
                {
                    var previousValue = _cardTypeMaster;
                    _cardTypeMaster = value;
                    FixupCardTypeMaster(previousValue);
                }
            }
        }
        private CardTypeMaster _cardTypeMaster;
        
    
        [DataMember]
        public virtual Club Club
        {
            get { return _club; }
            set
            {
                if (!ReferenceEquals(_club, value))
                {
                    var previousValue = _club;
                    _club = value;
                    FixupClub(previousValue);
                }
            }
        }
        private Club _club;
        
    
        [DataMember]
        public virtual Lead Lead
        {
            get { return _lead; }
            set
            {
                if (!ReferenceEquals(_lead, value))
                {
                    var previousValue = _lead;
                    _lead = value;
                    FixupLead(previousValue);
                }
            }
        }
        private Lead _lead;
        
    
        [DataMember]
        public virtual Membership Membership
        {
            get { return _membership; }
            set
            {
                if (!ReferenceEquals(_membership, value))
                {
                    var previousValue = _membership;
                    _membership = value;
                    FixupMembership(previousValue);
                }
            }
        }
        private Membership _membership;
        
    
        [DataMember]
        public virtual PayMode PayMode
        {
            get { return _payMode; }
            set
            {
                if (!ReferenceEquals(_payMode, value))
                {
                    var previousValue = _payMode;
                    _payMode = value;
                    FixupPayMode(previousValue);
                }
            }
        }
        private PayMode _payMode;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCardTypeMaster(CardTypeMaster previousValue)
        {
            if (previousValue != null && previousValue.Payments.Contains(this))
            {
                previousValue.Payments.Remove(this);
            }
    
            if (CardTypeMaster != null)
            {
                if (!CardTypeMaster.Payments.Contains(this))
                {
                    CardTypeMaster.Payments.Add(this);
                }
                if (CardTypeId != CardTypeMaster.Id)
                {
                    CardTypeId = CardTypeMaster.Id;
                }
            }
            else if (!_settingFK)
            {
                CardTypeId = null;
            }
        }
    
        private void FixupClub(Club previousValue)
        {
            if (previousValue != null && previousValue.Payments.Contains(this))
            {
                previousValue.Payments.Remove(this);
            }
    
            if (Club != null)
            {
                if (!Club.Payments.Contains(this))
                {
                    Club.Payments.Add(this);
                }
                if (ClubId != Club.ID)
                {
                    ClubId = Club.ID;
                }
            }
        }
    
        private void FixupLead(Lead previousValue)
        {
            if (previousValue != null && previousValue.Payments.Contains(this))
            {
                previousValue.Payments.Remove(this);
            }
    
            if (Lead != null)
            {
                if (!Lead.Payments.Contains(this))
                {
                    Lead.Payments.Add(this);
                }
                if (LeadId != Lead.ID)
                {
                    LeadId = Lead.ID;
                }
            }
        }
    
        private void FixupMembership(Membership previousValue)
        {
            if (previousValue != null && previousValue.Payments.Contains(this))
            {
                previousValue.Payments.Remove(this);
            }
    
            if (Membership != null)
            {
                if (!Membership.Payments.Contains(this))
                {
                    Membership.Payments.Add(this);
                }
                if (MembershipId != Membership.ID)
                {
                    MembershipId = Membership.ID;
                }
            }
        }
    
        private void FixupPayMode(PayMode previousValue)
        {
            if (previousValue != null && previousValue.Payments.Contains(this))
            {
                previousValue.Payments.Remove(this);
            }
    
            if (PayMode != null)
            {
                if (!PayMode.Payments.Contains(this))
                {
                    PayMode.Payments.Add(this);
                }
                if (PaymentModeId != PayMode.Id)
                {
                    PaymentModeId = PayMode.Id;
                }
            }
        }

        #endregion

    }
}
